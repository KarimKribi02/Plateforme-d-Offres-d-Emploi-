🔐 DOCUMENTATION DES API D'AUTHENTIFICATION

🧪 1. POST - Inscription d'un nouvel utilisateur
➤ Méthode : POST
URL :
```
http://localhost:3001/api/auth/register
```

Body > raw > JSON :
```json
{
  "name": "John Doe",
  "email": "john@example.com",
  "password": "password123",
  "role": "candidat"
}
```
✅ Résultat attendu : Utilisateur créé, avec status 201
```json
{
  "message": "User registered"
}
```

🧪 2. POST - Connexion d'un utilisateur
➤ Méthode : POST
URL :
```
http://localhost:3001/api/auth/login
```

Body > raw > JSON :
```json
{
  "email": "john@example.com",
  "password": "password123"
}
```
✅ Résultat attendu : Token JWT et rôle de l'utilisateur
```json
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "role": "candidat"
}
```

🔍 Comment utiliser le token dans d'autres requêtes :
- Ajouter l'en-tête "Authorization" avec la valeur "Bearer [token]"
- Exemple : 
```
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

💡 Rôles disponibles :
- "candidat" : Utilisateur cherchant un emploi
- "recruteur" : Utilisateur pouvant créer des offres d'emploi

🔄 Résumé des Routes

| Méthode | URL                       | Description                |
|---------|---------------------------|----------------------------|
| POST    | /api/auth/register        | Inscription d'un utilisateur |
| POST    | /api/auth/login           | Connexion d'un utilisateur   |

⚙️ Comment tester avec Postman :
1. Créer une requête POST pour l'inscription
2. Envoyer les données d'inscription
3. Créer une requête POST pour la connexion 
4. Utiliser les mêmes identifiants que lors de l'inscription
5. Copier le token reçu pour l'utiliser dans d'autres requêtes API 